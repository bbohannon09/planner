{"ast":null,"code":"import { LeaderboardTwoTone } from '@mui/icons-material';\nimport { createSlice } from '@reduxjs/toolkit';\nconst addTaskSlice = createSlice({\n  name: 'addTask',\n  initialState: {\n    showModal: false,\n    priorityLevel: 0,\n    titleFieldValue: '',\n    descriptionFieldValue: '',\n    allTasks: [],\n    incompleteTasks: [],\n    activeTasks: [],\n    finishedTasks: []\n  },\n  reducers: {\n    setShowModal: (state, action) => {\n      state.showModal = action.payload;\n    },\n    setPriorityLevel: (state, action) => {\n      state.priorityLevel = action.payload;\n    },\n    setTitleFieldValue: (state, action) => {\n      state.titleFieldValue = action.payload;\n    },\n    setDescriptionFieldValue: (state, action) => {\n      state.descriptionFieldValue = action.payload;\n    },\n    setNewTask: (state, action) => {\n      state.incompleteTasks.push(action.payload);\n      state.allTasks.push(action.payload);\n    },\n    moveTask: (state, action) => {\n      let movedItem;\n      switch (action.payload.start) {\n        case 'incompleteTasks':\n          movedItem = state.incompleteTasks[action.payload.source.index];\n          state.incompleteTasks = state.incompleteTasks.filter((_, index) => index !== action.payload.source.index);\n          break;\n        case 'activeTasks':\n          movedItem = state.activeTasks[action.payload.source.index];\n          state.activeTasks = state.activeTasks.filter((_, index) => index !== action.payload.source.index);\n          break;\n        case 'finishedTasks':\n          movedItem = state.finishedTasks[action.payload.source.index];\n          state.finishedTasks = state.finishedTasks.filter((_, index) => index !== action.payload.source.index);\n          break;\n      }\n      switch (action.payload.end) {\n        case 'incompleteTasks':\n          state.incompleteTasks.push(movedItem);\n          break;\n        case 'activeTasks':\n          state.activeTasks.push(movedItem);\n          break;\n        case 'finishedTasks':\n          state.finishedTasks.push(movedItem);\n          break;\n      }\n    },\n    reorderTasks: (state, action) => {\n      const {\n        start,\n        sourceIndex,\n        end,\n        destinationIndex\n      } = action.payload;\n      const movedItem = state[start][sourceIndex];\n      const updatedSourceList = state[start].filter((_, index) => index !== sourceIndex);\n      const updatedDestinationList = [...state[end].slice(0, destinationIndex), movedItem, ...state[end].slice(destinationIndex)];\n      return {\n        ...state,\n        [start]: updatedSourceList,\n        [end]: updatedDestinationList\n      };\n    }\n  }\n});\nexport const {\n  setShowModal,\n  setPriorityLevel,\n  setTitleFieldValue,\n  setDescriptionFieldValue,\n  setNewTask,\n  moveTask\n} = addTaskSlice.actions;\nexport default addTaskSlice.reducer;","map":{"version":3,"names":["LeaderboardTwoTone","createSlice","addTaskSlice","name","initialState","showModal","priorityLevel","titleFieldValue","descriptionFieldValue","allTasks","incompleteTasks","activeTasks","finishedTasks","reducers","setShowModal","state","action","payload","setPriorityLevel","setTitleFieldValue","setDescriptionFieldValue","setNewTask","push","moveTask","movedItem","start","source","index","filter","_","end","reorderTasks","sourceIndex","destinationIndex","updatedSourceList","updatedDestinationList","slice","actions","reducer"],"sources":["C:/Users/braed/Documents/Personal/Planner/src/Reducers/DayReducer.js"],"sourcesContent":["import { LeaderboardTwoTone } from '@mui/icons-material';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst addTaskSlice = createSlice({\r\n  name: 'addTask',\r\n  initialState: {\r\n    showModal: false,\r\n    priorityLevel: 0,\r\n    titleFieldValue: '',\r\n    descriptionFieldValue: '',\r\n    allTasks: [],\r\n    incompleteTasks: [],\r\n    activeTasks: [],\r\n    finishedTasks: []\r\n  },\r\n  reducers: {\r\n    setShowModal: (state, action) => {\r\n      state.showModal = action.payload;\r\n    },\r\n    setPriorityLevel: (state, action) => {\r\n      state.priorityLevel = action.payload;\r\n    },\r\n    setTitleFieldValue: (state, action) => {\r\n      state.titleFieldValue = action.payload;\r\n    },\r\n    setDescriptionFieldValue: (state, action) => {\r\n      state.descriptionFieldValue = action.payload;\r\n    },\r\n    setNewTask: (state, action) => {\r\n      state.incompleteTasks.push(action.payload);\r\n      state.allTasks.push(action.payload);\r\n    },\r\n    moveTask: (state, action) => {\r\n      let movedItem;\r\n\r\n      switch (action.payload.start) {\r\n        case 'incompleteTasks':\r\n          movedItem = state.incompleteTasks[action.payload.source.index];\r\n          state.incompleteTasks = state.incompleteTasks.filter((_, index) => index !== action.payload.source.index);\r\n          break;\r\n        case 'activeTasks':\r\n          movedItem = state.activeTasks[action.payload.source.index];\r\n          state.activeTasks = state.activeTasks.filter((_, index) => index !== action.payload.source.index);\r\n          break;\r\n        case 'finishedTasks':\r\n          movedItem = state.finishedTasks[action.payload.source.index];\r\n          state.finishedTasks = state.finishedTasks.filter((_, index) => index !== action.payload.source.index);\r\n          break;\r\n      }\r\n\r\n      switch (action.payload.end) {\r\n        case 'incompleteTasks':\r\n          state.incompleteTasks.push(movedItem)\r\n          break;\r\n        case 'activeTasks':\r\n          state.activeTasks.push(movedItem)\r\n          break;\r\n        case 'finishedTasks':\r\n          state.finishedTasks.push(movedItem)\r\n          break;\r\n      }\r\n    },\r\n    reorderTasks: (state, action) => {\r\n          const { start, sourceIndex, end, destinationIndex } = action.payload;\r\n    \r\n          const movedItem = state[start][sourceIndex];\r\n    \r\n          const updatedSourceList = state[start].filter((_, index) => index !== sourceIndex);\r\n    \r\n          const updatedDestinationList = [...state[end].slice(0, destinationIndex), movedItem, ...state[end].slice(destinationIndex)];\r\n    \r\n          return {\r\n            ...state,\r\n            [start]: updatedSourceList,\r\n            [end]: updatedDestinationList,\r\n          };\r\n    }\r\n  },\r\n});\r\n\r\nexport const {\r\n  setShowModal,\r\n  setPriorityLevel,\r\n  setTitleFieldValue,\r\n  setDescriptionFieldValue,\r\n  setNewTask,\r\n  moveTask\r\n} = addTaskSlice.actions;\r\n\r\nexport default addTaskSlice.reducer;"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,qBAAqB;AACxD,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAGD,WAAW,CAAC;EAC/BE,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,SAAS,EAAE,KAAK;IAChBC,aAAa,EAAE,CAAC;IAChBC,eAAe,EAAE,EAAE;IACnBC,qBAAqB,EAAE,EAAE;IACzBC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE,EAAE;IACnBC,WAAW,EAAE,EAAE;IACfC,aAAa,EAAE;EACjB,CAAC;EACDC,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACV,SAAS,GAAGW,MAAM,CAACC,OAAO;IAClC,CAAC;IACDC,gBAAgB,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MACnCD,KAAK,CAACT,aAAa,GAAGU,MAAM,CAACC,OAAO;IACtC,CAAC;IACDE,kBAAkB,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACrCD,KAAK,CAACR,eAAe,GAAGS,MAAM,CAACC,OAAO;IACxC,CAAC;IACDG,wBAAwB,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC3CD,KAAK,CAACP,qBAAqB,GAAGQ,MAAM,CAACC,OAAO;IAC9C,CAAC;IACDI,UAAU,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACL,eAAe,CAACY,IAAI,CAACN,MAAM,CAACC,OAAO,CAAC;MAC1CF,KAAK,CAACN,QAAQ,CAACa,IAAI,CAACN,MAAM,CAACC,OAAO,CAAC;IACrC,CAAC;IACDM,QAAQ,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC3B,IAAIQ,SAAS;MAEb,QAAQR,MAAM,CAACC,OAAO,CAACQ,KAAK;QAC1B,KAAK,iBAAiB;UACpBD,SAAS,GAAGT,KAAK,CAACL,eAAe,CAACM,MAAM,CAACC,OAAO,CAACS,MAAM,CAACC,KAAK,CAAC;UAC9DZ,KAAK,CAACL,eAAe,GAAGK,KAAK,CAACL,eAAe,CAACkB,MAAM,CAAC,CAACC,CAAC,EAAEF,KAAK,KAAKA,KAAK,KAAKX,MAAM,CAACC,OAAO,CAACS,MAAM,CAACC,KAAK,CAAC;UACzG;QACF,KAAK,aAAa;UAChBH,SAAS,GAAGT,KAAK,CAACJ,WAAW,CAACK,MAAM,CAACC,OAAO,CAACS,MAAM,CAACC,KAAK,CAAC;UAC1DZ,KAAK,CAACJ,WAAW,GAAGI,KAAK,CAACJ,WAAW,CAACiB,MAAM,CAAC,CAACC,CAAC,EAAEF,KAAK,KAAKA,KAAK,KAAKX,MAAM,CAACC,OAAO,CAACS,MAAM,CAACC,KAAK,CAAC;UACjG;QACF,KAAK,eAAe;UAClBH,SAAS,GAAGT,KAAK,CAACH,aAAa,CAACI,MAAM,CAACC,OAAO,CAACS,MAAM,CAACC,KAAK,CAAC;UAC5DZ,KAAK,CAACH,aAAa,GAAGG,KAAK,CAACH,aAAa,CAACgB,MAAM,CAAC,CAACC,CAAC,EAAEF,KAAK,KAAKA,KAAK,KAAKX,MAAM,CAACC,OAAO,CAACS,MAAM,CAACC,KAAK,CAAC;UACrG;MACJ;MAEA,QAAQX,MAAM,CAACC,OAAO,CAACa,GAAG;QACxB,KAAK,iBAAiB;UACpBf,KAAK,CAACL,eAAe,CAACY,IAAI,CAACE,SAAS,CAAC;UACrC;QACF,KAAK,aAAa;UAChBT,KAAK,CAACJ,WAAW,CAACW,IAAI,CAACE,SAAS,CAAC;UACjC;QACF,KAAK,eAAe;UAClBT,KAAK,CAACH,aAAa,CAACU,IAAI,CAACE,SAAS,CAAC;UACnC;MACJ;IACF,CAAC;IACDO,YAAY,EAAEA,CAAChB,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAM;QAAES,KAAK;QAAEO,WAAW;QAAEF,GAAG;QAAEG;MAAiB,CAAC,GAAGjB,MAAM,CAACC,OAAO;MAEpE,MAAMO,SAAS,GAAGT,KAAK,CAACU,KAAK,CAAC,CAACO,WAAW,CAAC;MAE3C,MAAME,iBAAiB,GAAGnB,KAAK,CAACU,KAAK,CAAC,CAACG,MAAM,CAAC,CAACC,CAAC,EAAEF,KAAK,KAAKA,KAAK,KAAKK,WAAW,CAAC;MAElF,MAAMG,sBAAsB,GAAG,CAAC,GAAGpB,KAAK,CAACe,GAAG,CAAC,CAACM,KAAK,CAAC,CAAC,EAAEH,gBAAgB,CAAC,EAAET,SAAS,EAAE,GAAGT,KAAK,CAACe,GAAG,CAAC,CAACM,KAAK,CAACH,gBAAgB,CAAC,CAAC;MAE3H,OAAO;QACL,GAAGlB,KAAK;QACR,CAACU,KAAK,GAAGS,iBAAiB;QAC1B,CAACJ,GAAG,GAAGK;MACT,CAAC;IACP;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXrB,YAAY;EACZI,gBAAgB;EAChBC,kBAAkB;EAClBC,wBAAwB;EACxBC,UAAU;EACVE;AACF,CAAC,GAAGrB,YAAY,CAACmC,OAAO;AAExB,eAAenC,YAAY,CAACoC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}